//
// File:        $URL: file:///usr/casc/samrai/repository/SAMRAI/tags/v-2-4-4/source/test/locally_active/test-refine-2d-3levels-ALL.input $
// Package:     SAMRAI tests
// Copyright:   (c) 1997-2008 Lawrence Livermore National Security, LLC
// Revision:    $LastChangedRevision: 1917 $
// Modified:    $LastChangedDate: 2008-01-25 13:28:01 -0800 (Fri, 25 Jan 2008) $
// Description: input file for testing locally-active data
//

/*
 *  CONSTANTS FOR DOMAIN SETUP
 */

// 1 processor
PX_1 = 1
PY_1 = 1
PZ_1 = 1

// 2 processors
PX_2 = 2
PY_2 = 1
PZ_2 = 1


Main {
// VisIt writer information
   dump_viz_data        = TRUE
   visit_dump_dirname = "test-refine-2d-3levels-ALL_viz"
   visit_number_procs_per_file = 1

// log file parameters 
   dump_databases_to_log     = TRUE  
   dump_hierarchy_to_log     = TRUE
   dump_patchdata_to_log     = FALSE
   log_file_name    = "test-refine-2d-3levels-ALL.log"
   log_all_nodes    = TRUE
}

LocallyActiveDataTester_1 {

   test_to_run = "REFINE_TEST"
   check_results = TRUE

// Required function distrution to use
   function_distribution = "FINE_PATCH_ALL"

// View locally-active data in VisIt until fixed
   check_function_definitions = FALSE

   nghosts_function = 1 , 1
   nghosts_solution = 0 , 0

   GriddingParameters {
      num_levels = 3          // number of levels in hierarchy

      ratio_to_coarser {      // vector ratio to next coarser level
         level_1 = 2 , 2 
         level_2 = 2 , 2
      }

      // use for COARSEN_TEST or REFINE_TEST
      npatches_on_coarsest = PX_1 , PY_1
   }

   FinePatchFunctionData {
      function_spec = "CONSTANT_PERF"
      radius        = 0.7
      alpha         = 1.0
   }

}

LocallyActiveDataTester_2 {

   test_to_run = "REFINE_TEST"
   check_results = TRUE

// Required function distrution to use
   function_distribution = "FINE_PATCH_ALL"

// View locally-active data in VisIt until fixed
   check_function_definitions = FALSE

   nghosts_function = 1 , 1
   nghosts_solution = 0 , 0

   GriddingParameters {
      num_levels = 3          // number of levels in hierarchy

      ratio_to_coarser {      // vector ratio to next coarser level
         level_1 = 2 , 2
         level_2 = 2 , 2
      }

      // use for COARSEN_TEST or REFINE_TEST
      npatches_on_coarsest = PX_2 , PY_2
   }

   FinePatchFunctionData {
      function_spec = "CONSTANT_PERF"
      radius        = 0.7
      alpha         = 1.0
   }

}

CartesianGeometry_1 {
     domain_boxes	= [(0,0),(PX_1*8 - 1, PY_1*8 - 1)]
     x_lo = 0.e0 , 0.e0    // lower end of computational domain.
     x_up = (PX_1 * 32.e0) , (PY_1 * 32.e0) // upper end of computational domain.

     periodic_dimension = 1, 1
}

CartesianGeometry_2 {
     domain_boxes       = [(0,0),(PX_2*8 - 1, PY_2*8 - 1)]
     x_lo = 0.e0 , 0.e0    // lower end of computational domain.
     x_up = (PX_2 * 32.e0) , (PY_2 * 32.e0) // upper end of computational domain.

     periodic_dimension = 1, 1
}

TimerManager {
   //print_exclusive = TRUE
   print_summed = TRUE
   print_max = TRUE
   timer_list = "apps::main::*",
                "apps::LocallyActiveDataTester::*",
                "xfer::LocallyActiveDataRefineSchedule::*"
}
