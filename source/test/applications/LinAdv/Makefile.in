##
## File:	$URL: file:///usr/casc/samrai/repository/SAMRAI/tags/v-2-4-4/source/test/applications/LinAdv/Makefile.in $
## Package:	SAMRAI applications
## Copyright:	(c) 1997-2008 Lawrence Livermore National Security, LLC
## Revision:	$LastChangedRevision: 2181 $
## Modified:	$LastChangedDate: 2008-05-06 11:04:30 -0700 (Tue, 06 May 2008) $
## Description:	makefile for linear advection sample application
##

SAMRAI	      =	@top_srcdir@
SRCDIR	      =	@top_srcdir@/examples/LinAdv
SUBDIR        = source/test/applications/LinAdv
VPATH	      =	@top_srcdir@/examples/LinAdv
TESTTOOLS     = ../../testtools
OBJECT        = ../../../..

default: check	

include $(OBJECT)/config/Makefile.config

AUTOTEST      = $(SAMRAI)/source/test/applications
CPPFLAGS_EXTRA= -I$(AUTOTEST) -DNDIM=$(PDIM) -DTESTING=1 
#LDFLAGS_EXTRA= --link_command_prefix "/usr/local/bin/purify4.5 -best-effort"
FORTRAN       = $(SRCDIR)/fortran/$(PDIM)d

NUM_TESTS = 10

TEST_NPROCS = @TEST_NPROCS@

CXX_OBJS      = main.o LinAdv.o AutoTester.o
F2D_OBJS      = flux.o grad.o init.o stable.o stufprobc.o trace1d.o trace.o
F3D_OBJS      = $(F2D_OBJS) fluxcorner.o

main2d:
		if test -f stamp-3d; then $(MAKE) clean-check ; fi
		touch stamp-2d
		$(MAKE) PDIM=2 main-2d

main-2d:	$(CXX_OBJS) $(F2D_OBJS) $(LIBSAMRAIDEPEND)
		$(CXX) $(CXXFLAGS) $(LDFLAGS) $(CXX_OBJS) $(F2D_OBJS)	\
		$(LIBSAMRAI2D) $(LIBSAMRAI) $(LDLIBS) -o main2d

main3d:
		if test -f stamp-2d; then $(MAKE) clean-check ; fi
		touch stamp-3d
		$(MAKE) PDIM=3 main-3d

main-3d:	$(CXX_OBJS) $(F3D_OBJS) $(LIBSAMRAIDEPEND)
		$(CXX) $(CXXFLAGS) $(LDFLAGS) $(CXX_OBJS) $(F3D_OBJS)	\
		$(LIBSAMRAI3D) $(LIBSAMRAI) $(LDLIBS) -o main3d

check:
		$(MAKE) check2d
		$(MAKE) check3d

# WARNING: Checking of the redistribute routine is a bit of a problem since it needs only a single run 
#          to have been done.  So remove the old stuff.
check2d:	main2d
		$(OBJECT)/config/serpa-run $(TEST_NPROCS) \
			./main2d test-2d.input; \
		$(RM) -rf  restart-test-2d/restore.000003/nodes.0000[2-9]
		$(OBJECT)/tools/restart/restart-redistribute $(abspath restart-test-2d) $(abspath restart-redistribute-2d) 3 4; \
		$(OBJECT)/config/serpa-run $(TEST_NPROCS) \
			./main2d test-2d.input restart-test-2d 5; \
		$(OBJECT)/config/serpa-run $(TEST_NPROCS) \
			./main2d test-2d-sync.input; \
		$(OBJECT)/config/serpa-run $(TEST_NPROCS) \
			./main2d test-2d-sync.input restart-test-2d-sync 5; \
		$(OBJECT)/config/serpa-run $(TEST_NPROCS) \
			./main2d test-2d-sync-re.input; \
		$(OBJECT)/config/serpa-run $(TEST_NPROCS) \
			./main2d test-2d-sync-re.input restart-test-2d-sync-re 5

check3d:	main3d
		$(OBJECT)/config/serpa-run $(TEST_NPROCS) \
			./main3d test-3d.input; \
		$(OBJECT)/config/serpa-run $(TEST_NPROCS) \
			./main3d test-3d.input restart-test-3d 5; \
		$(OBJECT)/config/serpa-run $(TEST_NPROCS) \
			./main3d test-3d-sync.input; \
		$(OBJECT)/config/serpa-run $(TEST_NPROCS) \
			./main3d test-3d-sync.input restart-test-3d-sync 5

checktest:
		rm -rf makecheck.logfile
		$(MAKE) check >& makecheck.logfile
		cat makecheck.logfile
		$(TESTTOOLS)/testcount.sh $(TEST_NPROCS) $(NUM_TESTS) makecheck.logfile
		rm -rf makecheck.logfile

clean-check:
		$(SAMCLEAN)

clean:		clean-check
		$(RM) *.f *main* 
		$(RM) -rf restart-*d*

include $(SRCDIR)/Makefile.depend

FORTRAN       = $(SRCDIR)/fortran/$(PDIM)d
M4DIRS        = -DFORTDIR=$(FORTRAN) $(SAMRAI_M4_FLAGS)

AutoTester.o:	$(AUTOTEST)/AutoTester.C
		$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c  $(AUTOTEST)/AutoTester.C \
		-o $@

flux.o:		$(FORTRAN)/flux.m4
		$(M4) $(M4DIRS) $(FORTRAN)/flux.m4 > flux.f
		$(F77) $(FFLAGS) -c flux.f -o $@

fluxcorner.o:	$(FORTRAN)/fluxcorner.m4
		$(M4) $(M4DIRS) $(FORTRAN)/fluxcorner.m4 > fluxcorner.f
		$(F77) $(FFLAGS) -c fluxcorner.f -o $@

grad.o:		$(FORTRAN)/grad.m4
		$(M4) $(M4DIRS) $(FORTRAN)/grad.m4 > grad.f
		$(F77) $(FFLAGS) -c grad.f -o $@

init.o:		$(FORTRAN)/init.m4
		$(M4) $(M4DIRS) $(FORTRAN)/init.m4 > init.f
		$(F77) $(FFLAGS) -c init.f -o $@

stable.o:	$(FORTRAN)/stable.m4
		$(M4) $(M4DIRS) $(FORTRAN)/stable.m4 > stable.f
		$(F77) $(FFLAGS) -c stable.f -o $@

stufprobc.o:	$(FORTRAN)/../stufprobc.m4
		$(M4) $(M4DIRS) $(FORTRAN)/../stufprobc.m4 > stufprobc.f
		$(F77) $(FFLAGS) -c stufprobc.f -o $@

trace.o:	$(FORTRAN)/trace.m4
		$(M4) $(M4DIRS) $(FORTRAN)/trace.m4 > trace.f
		$(F77) $(FFLAGS) -c trace.f -o $@

trace1d.o:	$(FORTRAN)/trace1d.m4
		$(M4) $(M4DIRS) $(FORTRAN)/trace1d.m4 > trace1d.f
		$(F77) $(FFLAGS) -c trace1d.f -o $@
