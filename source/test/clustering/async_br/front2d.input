//
// File:        $URL: file:///usr/casc/samrai/repository/SAMRAI/tags/v-2-4-4/source/test/clustering/async_br/front2d.input $
// Package:     SAMRAI tests
// Copyright:   (c) 1997-2008 Lawrence Livermore National Security, LLC
// Revision:    $LastChangedRevision: 2292 $
// Modified:    $LastChangedDate: 2008-07-11 11:31:57 -0700 (Fri, 11 Jul 2008) $
// Description: Input file for 2D DLBG test.
//

Main {
  which_br = 'o'
  base_name = "front2d"
  log_all = TRUE
  plot_step = 1
  check_graph = FALSE
  // restart_write_dirname = "restart"
  // time_nlbg_random_rmi = TRUE
  log_hierarchy = FALSE
  num_steps = 80
}

ABRTest {
  sine_tagger {
    allocate_data = TRUE
    adaption_buffer = 1
    period = 1
    amplitude = .3
    init_disp = 0.5, 0.0
    velocity = 0.02, 0.005
  }
}


AsyncBergerRigoutsos {
  // log_node_history = TRUE
  log_cluster_summary = TRUE
    // algo_advance_mode: "SYNCHRONOUS", "ADVANCE_SOME", "ROUND_ROBIN" or "ADVANCE_ANY"
  // algo_advance_mode = "ADVANCE_ANY"
  algo_advance_mode = "ADVANCE_SOME"
  // algo_advance_mode = "SYNCHRONOUS"
  // owner_mode: "SINGLE_OWNER", "MOST_OVERLAP" (default), "FEWEST_OWNED", "LEAST_ACTIVE"
  // owner_mode = "SINGLE_OWNER"
  owner_mode = "MOST_OVERLAP"
  // owner_mode = "FEWEST_OWNED"
  // owner_mode = "LEAST_ACTIVE"
  use_level_boxes = FALSE
  use_private_communicator = TRUE
  max_gcw = 0, 0
}


CartesianGridGeometry {
  // domain_boxes = [(0,0), (9,3)]
  // domain_boxes = [(0,0), (23,15)]
  domain_boxes = [(0,0), (47,31)]
  // domain_boxes = [(0,0), (95,63)]
  // domain_boxes = [(0,0), (191,127)]
  // domain_boxes = [(0,0), (383,255)]
  // domain_boxes = [(0,0), (767,511)]
  x_lo         = 0, 0
  x_up         = 3, 2
}

StandardTagAndInitialize {
  tagging_method = "GRADIENT_DETECTOR"
}

LoadBalancer{
  processors = 1, 1
  use_spatial_bin_pack = TRUE
}

GriddingAlgorithm {
   max_levels = 5
   largest_patch_size {
      level_0 = 64, 64
      // all finer levels will use same values as level_0...
   }
   smallest_patch_size {
      level_0 = 4,4
      // all finer levels will use same values as level_0...
   }
   ratio_to_coarser {
      level_1            = 2, 2
      level_2            = 2, 2
      level_3            = 2, 2
      level_4            = 2, 2
      level_5            = 2, 2
      level_6            = 2, 2
      level_7            = 2, 2
      level_8            = 2, 2
      level_9            = 2, 2
      //  etc.
   }
   proper_nesting_buffer = 0, 0, 0, 0, 0
   efficiency_tolerance = 0.70
   combine_efficiency = 0.85
   // write_regrid_boxes = TRUE
   // read_regrid_boxes = TRUE
   // regrid_boxes_filename = "grid"
   allow_patches_smaller_than_ghostwidth = TRUE
   allow_patches_smaller_than_minimum_size_to_prevent_overlaps = TRUE
   sort_boxes_after_clustering = TRUE
   // extend_tags_to_bdry = TRUE
   // use_new_alg = TRUE
}


GlobalInputs{
   tag_clustering_method = "BINARY_TREE"
}


TimerManager{
  timer_list = "hier::*::*", "mesh::*::*", "tbox::*::*", "apps::*::*"
  print_user = TRUE
  // print_timer_overhead = TRUE
  print_threshold = 0
  print_summed = TRUE
  print_max = TRUE
}
