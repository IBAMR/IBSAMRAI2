//
// File:        $URL: file:///usr/casc/samrai/repository/SAMRAI/tags/v-2-4-4/examples/boundary/sample_input/basic3d-periodic111.input $
// Package:     SAMRAI tests
// Copyright:   (c) 1997-2008 Lawrence Livermore National Security, LLC
// Revision:    $LastChangedRevision: 1917 $
// Modified:    $LastChangedDate: 2008-01-25 13:28:01 -0800 (Fri, 25 Jan 2008) $
// Description: input file for testing 3d periodic boundary conditions
//

Main {
    log_file_name    = "basic3d-periodic111.log"
    num_domain_boxes = 2 , 1 , 2
}

CartesianGridGeometry {
   domain_boxes = [ (0,0,0) , (7,3,7) ]
   x_lo         = 0.e0 , 0.e0 , 0.e0   // lower end of computational domain.
   x_up         = 1.e0 , 0.5e0 , 1.e0   // upper end of computational domain.
   periodic_dimension = 1, 1, 1
}

BoundaryDataTester {

   //
   // Variable information is read in by the BoundaryDataTester object
   // Each variable has its own sub-database which must contain the proper
   // variable information.  The name of each sub-database for a variable 
   // is arbitrary.  But the names must be distinct.  Also the names of the
   // individual variables must be distinct.
   //
   //    Required input:  name
   //                     interior_values    (# of values must = depth)
   //    Optional input:  depth              (default = 1)
   //                     num_ghosts         (default = 1,1,1)
   //

   variable_1 {
      name            = "var1"
      depth           = 1
      num_ghosts      = 2 , 2 , 2
      interior_values = 1.0
   }

   variable_2 {
      name            = "var2"
      depth           = 3
      num_ghosts      = 1 , 1 , 1
      interior_values = 2.0 , 3.0 , 4.0
   }

   //
   // Boundary conditioninformation is read in by the BoundaryDataTester object
   // Each boundary type and location has its own sub-database which must be 
   // named properly and contain valid boundary information.
   // 
   // Valid boundary_condition entries for faces in 3d are:
   //     "FLOW", "SYMMETRIC", "DIRICHLET", "NEUMANN"
   //
   // Valid boundary_condition entries for edges and nodes in 3d are:
   //     "*FLOW", "*SYMMETRIC", "*DIRICHLET", "*NEUMANN"
   // Here, "*" may be either "X", "Y", or "Z".  The condition given for 
   // an edge or node must match that of the appropriate adjacent face.  
   // This is enforced for consistency.  Note that when a REFLECT face 
   // condition is given and the other adjacent face has either a FLOW 
   // or REFLECT condition, the resulting edge or node boundary values 
   // will be the same regardless of which face is used.
   //
   // Boundary data must be given for each face, edge, and node in a 
   // non-periodic direction.  Any input values given for periodic 
   // directions will be ignored.
   //
   //

}
