//
// File:        $URL: file:///usr/casc/samrai/repository/SAMRAI/tags/v-2-4-4/examples/emb_bdry/cubes/slc/cubes-test.input $
// Package:     SAMRAI application
// Copyright:   (c) 1997-2002 Lawrence Livermore National Security, LLC
// Release:     $Name:  $
// Revision:    $LastChangedRevision: 1704 $
// Modified:    $LastChangedDate: 2007-11-13 16:32:40 -0800 (Tue, 13 Nov 2007) $
// Description: Input file to test SAMRAI-Cubes interface
//

Main {

   time       = 0.0
   dt         = 0.1
   nsteps     = 5

   tag_buffer = 1

   log_file_name            = "slc-test.log"

   visit_dump_interval        = 1      
   visit_dump_dirname         = "viz_slc"

}

SampleApp {
   tag_growing_sphere   = TRUE 
   tag_cut_cells        = FALSE
   centroid             = 6000., 7200., 5.
   centroid_velocity    = 50., 30. , 1.
   radius               = 20.
   radius_growth_rate   = 10.
}


EmbeddedBoundaryGeometry {

    CubesPatchInterface {
       surface_tri_file = "slc-rev.tri"
       max_levels       = 5
       verbose          = TRUE
    }

}

CartesianGeometry {
   domain_boxes  = [ (0,0,0) , (48,28,28) ]   // coarse mesh
   x_lo          = 5656.01 , 7000.001 , 0.10001 // lower end of computational domain.
   x_up          = 7015.e0 , 8000.e0 , 200.e0 // upper end of computational domain.
}

GriddingAlgorithm {
   max_levels              = 5 // Maximum number of levels in hierarchy.

// Note: For the following regridding information, data is required for each
//       potential in the patch hierarchy; i.e., levels 0 thru max_levels-1.
//       If more data values than needed are given, only the number required
//       will be read in.  If fewer values are given, an error will result.
//
// Specify coarsening ratios for each level 1 through max_levels-1
   ratio_to_coarser {         // vector ratio to next coarser level
      level_1               = 2 , 2 , 2
      level_2               = 2 , 2 , 2
      level_3               = 2 , 2 , 2
      level_4               = 2 , 2 , 2
   }

   largest_patch_size {
//      level_0 = 199 , 199 , 199
      level_0 = 19 , 19 , 19
      // all finer levels will use same values as level_0...
   }

   smallest_patch_size {
      level_0 = 4 , 4 , 4
      // all finer levels will use same values as level_0...
   }

   efficiency_tolerance     = 0.90e0   // min % of tag cells in new patch level
   combine_efficiency       = 0.95e0   // chop box if sum of volumes of smaller
                                       // boxes < efficiency * vol of large box
}

StandardTagAndInitialize{
   tagging_method = "GRADIENT_DETECTOR"
//   tagging_method = "REFINE_BOXES"
//   RefineBoxes {
//      level_0  = [ (10,10) , (80,80) ]
//   }
}

TimerManager {
   timer_list = "apps::main::*",
                "appu::*::*"
}


UniformLoadBalance {  // for SAMRAI v1.3.1
//   processors         = 1 , 1
   use_spatial_bin_pack = TRUE
}
LoadBalancer {  // for SAMRAI v1.3.2
   use_spatial_bin_pack = TRUE
}

